class SlackRetriever {
    constructor(slack) {
        this.slack = slack;
    }

    getChannelHistory(channelName, dateToRetrieve) {
        var self = this;
        return new Promise(function(resolve, reject) {
            self.slack.listChannels()
                .then(channelObject => {
                    var channel = channelObject.channels.find(chan => chan.name === channelName);
                    if(channel === undefined) {
                        reject("The channel \"" + channelName + "\" was not found.");
                    }
                    return channel.id;
                })
                .then(channelId => {
                    if(dateToRetrieve instanceof Date) {
                        var oldest = (Date.UTC(
                            dateToRetrieve.getFullYear(),
                            dateToRetrieve.getMonth(),
                            dateToRetrieve.getDate()
                        ) - 1)
                        .toString()
                        .slice(0, -3) + ".999999";

                        var latest = (Date.UTC(
                            dateToRetrieve.getFullYear(),
                            dateToRetrieve.getMonth(),
                            dateToRetrieve.getDate(),
                            23, 59, 59
                        ) + 1000)
                        .toString()
                        .slice(0, -3) + ".000000";

                        return resolve(self.slack.getChannelHistory(channelId, oldest, latest));
                    }

                    return resolve(self.slack.getChannelHistory(channelId));
                });
        });
    }
}
module.exports = SlackRetriever;
